{"version":3,"sources":["logo.svg","asset/styles.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","background","palette","width","boxShadow","shadows","outline","maxHeight","overflowY","overflowX","field","borderRadius","padding","fontSize","margin","border","fieldInput","fontStyle","inline","minWidth","ruleHeader","fontWeight","textTransform","small","medium","large","iconWrap","marginTop","icon","opacity","transition","cursor","primaryIcon","marginLeft","color","secondaryIcon","group","groupNormal","groupBorder","borderTop","borderBottom","formBlock","formInline","headerMargin","footerMargin","rowMargin","button","primary","marginRight","secondary","link","addLink","removeLink","App","props","classes","uuidv4","require","useState","id","type","logic","parameter","value","rule","setRule","useEffect","Modal","className","open","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Grid","container","justify","item","xs","Typography","Input","variant","disableUnderline","name","placeholder","Select","MenuItem","map","val","index","spacing","length","param","paramIndex","onChange","e","paramId","event","findIndex","newRule","target","changeField","inputProps","style","endAdornment","InputAdornment","position","Link","onClick","splice","removeParameter","push","addParameter","RemoveCircleOutline","removeRule","AddCircleOutline","newRules","state","addRule","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f17609a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  //<---- MODAL --->//\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n    background: theme.palette.background.paper,\r\n    width: \"800px\",\r\n    boxShadow: theme.shadows[5],\r\n    outline:\"none\",\r\n    maxHeight:\"80vH\",\r\n    overflowY:\"auto\",\r\n    overflowX:\"hidden\"\r\n  },\r\n\r\n  //<---- FIELDS --->//\r\n  field:{\r\n    borderRadius:\"5px\",\r\n    background:\"#FFFFFF\",\r\n    padding:\"0 10px\",\r\n    fontSize:\"12px\",\r\n    margin:\"0.2rem 0\",\r\n    border: '1px solid #C0C0C0',\r\n    width:\"100%\",\r\n  },\r\n\r\n  fieldInput:{\r\n    '&::placeholder': {\r\n      fontStyle:\"italic\"\r\n    }\r\n  },\r\n\r\n  inline:{\r\n    width: 'fit-content',\r\n    minWidth:\"120px\"\r\n  },\r\n  \r\n  //<---- FONTS --->//\r\n  ruleHeader:{\r\n    fontSize:\"12px\",\r\n    fontWeight:\"bold\",\r\n    textTransform:\"uppercase\"\r\n  },\r\n\r\n  small:{\r\n    display:'inline',\r\n    fontSize:\"12px\"\r\n  },\r\n\r\n  medium:{\r\n    display:'inline',\r\n    fontSize:\"14px\"\r\n  },\r\n\r\n  large:{\r\n    fontWeight:\"medium\",\r\n    display:'inline',\r\n    fontSize:\"18px\"\r\n  },\r\n\r\n  //<---- ICONS --->//\r\n  iconWrap:{\r\n    marginTop:\"0.5rem\"\r\n  },\r\n\r\n  icon:{\r\n    margin:\"0 0.5rem\",\r\n    fontSize:\"20px\",\r\n    opacity:\"1\",\r\n    transition:\"0.5s\",\r\n    cursor:\"pointer\",\r\n    '&:hover':{\r\n      opacity:\"0.5\"\r\n    }\r\n  },\r\n\r\n  primaryIcon:{\r\n    marginLeft:\"0.3rem\",\r\n    color:\"#404040\"\r\n  },\r\n\r\n  secondaryIcon:{\r\n    marginLeft:\"1rem\",\r\n    color:\"#A7A7A7\"\r\n  },\r\n\r\n  //<---- RULE GROUP --->//\r\n  group:{\r\n    padding:\"0.27rem\",\r\n    margin:\"0.6rem 0\"\r\n  },\r\n\r\n  groupNormal:{\r\n    background:\"#EEEEEE\",\r\n    padding:\"1rem\",\r\n  },\r\n\r\n  groupBorder:{\r\n    background:\"#EEEEEE\",\r\n    borderTop: \"1px solid #D6D6D6\", \r\n    borderBottom: \"1px solid #D6D6D6\",\r\n    padding:\"1rem\",\r\n  },\r\n  \r\n  //<---- ROWS --->//\r\n  formBlock: {\r\n    display:\"block\",\r\n  },\r\n\r\n  formInline: {\r\n    display:\"inline-block\",\r\n    margin:\"0 1rem\"\r\n  },\r\n\r\n  headerMargin:{\r\n    margin:\"1rem 1rem 0.6rem 1rem\"\r\n  },\r\n\r\n  footerMargin:{\r\n    margin:\"0.6rem 1rem 1rem 1rem\"\r\n  },\r\n\r\n  rowMargin:{\r\n    margin:\"0.6rem 1rem\"\r\n  },\r\n\r\n  //<---- BUTTONS --->//\r\n  button:{\r\n    color:\"#fff\",\r\n    fontSize:\"12px\",\r\n    transition:\"0.5s\",\r\n    textTransform:\"none\",\r\n    padding:\"0.5rem 1.6rem\",\r\n    '&:hover':{\r\n      background:\"#E68124\",\r\n      opacity:\"0.5\"\r\n    }\r\n  },\r\n\r\n  primary:{\r\n    background:\"#E68124\",\r\n    marginRight:\"0.6rem\",\r\n    \r\n  },\r\n\r\n  secondary:{\r\n    background:\"#878787\",\r\n  },\r\n\r\n  //<---- LINKS --->//\r\n  link:{\r\n    fontWeight:\"bold\",\r\n    cursor:\"pointer\",\r\n  },\r\n\r\n  addLink:{\r\n    color:\"#6EAFD9\"\r\n  },\r\n\r\n  removeLink:{\r\n    color:\"#C14E49\"\r\n  },\r\n\r\n}));\r\n\r\nexport {useStyles} ","import logo from './logo.svg';\r\nimport React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\n\r\nimport {Modal, \r\n        Grid,\r\n        Backdrop, \r\n        Fade,\r\n        Input,\r\n        Link,\r\n        Select,\r\n        MenuItem,\r\n        Typography,\r\n        Button,\r\n        InputAdornment} from '@material-ui/core';\r\nimport {AddCircleOutline, RemoveCircleOutline} from '@material-ui/icons';\r\nimport {useStyles} from './asset/styles';\r\n\r\n\r\nfunction App(props) {\r\n  const classes = useStyles(props);\r\n  const uuidv4 = require(\"uuid/v4\")\r\n  const [rule, setRule] = useState([{id:uuidv4(), type:\"aff_sub\",  logic:\"is\",  parameter:[{id: uuidv4(), value: null}] }]);\r\n\r\n  /**\r\n   * addRule is to add new rules \r\n   */\r\n  const addRule = () =>{\r\n    let newRules = {\r\n      id: uuidv4(),\r\n      type:\"aff_sub\",  \r\n      logic:\"is\",  \r\n      parameter:[{id: uuidv4(), value: null}] \r\n    }\r\n    setRule(state=>[...state, newRules])\r\n\r\n  }\r\n\r\n  /**\r\n   * removeRule is to remove targeted rule \r\n   * @param {string} id - rule id\r\n   */\r\n  const removeRule = (id) =>{\r\n    if(rule.length>1){\r\n      const index = rule.findIndex((val)=> {return val.id === id})\r\n      let newRule = [...rule]\r\n      newRule.splice(index, 1)\r\n      setRule(newRule)\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * addParameter is to add new parameters into the rule\r\n   * @param {string} id - parameter id\r\n   */\r\n  const addParameter = (id) =>{\r\n    const index = rule.findIndex((val)=> {return val.id === id})\r\n\r\n    let newRule = [...rule]\r\n    newRule[index].parameter.push({id: uuidv4(), value: null})\r\n\r\n    setRule(newRule)\r\n  }\r\n\r\n  /**\r\n   * removeParameter is to remove targeted parameters from respective rule\r\n   * @param {string} id - rule id\r\n   * @param {string} paramId - parameter id\r\n   */\r\n  const removeParameter = (id, paramId) =>{\r\n    const index = rule.findIndex((val)=> {return val.id === id})\r\n    const paramIndex = rule[index].parameter.findIndex((param)=> {return param.id === paramId})\r\n\r\n    let newRule = [...rule]\r\n    newRule[index].parameter.splice(paramIndex, 1)\r\n\r\n    setRule(newRule)\r\n  }\r\n\r\n  /**\r\n   * removeParameter is to remove targeted parameters from respective rule\r\n   * @param {string} id - rule id\r\n   * @param {string} paramId - parameter id\r\n   */\r\n  const changeField = (id, paramId, event) =>{\r\n    const index = rule.findIndex((val)=> {return val.id === id})\r\n    const paramIndex = rule[index].parameter.findIndex((val)=> {return val.id === paramId})\r\n    \r\n    let newRule = [...rule]\r\n    newRule[index].parameter[paramIndex].value = event.target.value\r\n\r\n    setRule(newRule)\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n  },[rule]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* Modal */}\r\n      <Modal\r\n        className={classes.modal}\r\n        open={true}\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={true}>\r\n          {/* Modal Content */}\r\n          <div className={classes.paper}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              {/* Header */}\r\n              <Grid item xs={12}  className={classes.headerMargin}>\r\n                <Typography className={classes.large}>\r\n                  Add Revenue Group\r\n                </Typography>\r\n              </Grid>\r\n\r\n              {/* Body */}\r\n              <Grid container justify=\"center\" alignItems=\"center\">\r\n                {/* Title */}\r\n                <Grid item xs={12}  className={classes.rowMargin}>\r\n                  <Typography className={classes.medium}>\r\n                    Revenue Group Title\r\n                  </Typography>\r\n                  <Input\r\n                    className={classes.field}\r\n                    variant=\"outlined\"\r\n                    disableUnderline\r\n                    name=\"title\"\r\n                    placeholder=\"title\"\r\n                  />\r\n                </Grid>\r\n\r\n                {/* Conditions */}\r\n                <Grid item xs={12}  className={classes.rowMargin}>\r\n                  <Typography className={classes.small}>\r\n                    If &nbsp;\r\n                  </Typography>\r\n                  <Select\r\n                    disableUnderline\r\n                    className={`${classes.field} ${classes.inline}`}\r\n                    name=\"condition\"\r\n                    value={\"all\"}\r\n                  >\r\n                    <MenuItem value=\"all\">ALL</MenuItem>\r\n                  </Select>\r\n                  <Typography className={classes.small}>\r\n                  &nbsp; of the conditions are met\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                {/* Rule */}\r\n                <Grid item xs={12} className={classes.group}>\r\n                  {\r\n                    rule.map((val, index) => (\r\n                        <Grid key={val.id} container justify=\"center\" spacing={1}  alignItems=\"flex-start\"\r\n                              className={rule.length>1 ? classes.groupBorder : classes.groupNormal}\r\n                        >\r\n                          {rule.length > 1 && \r\n                            <Grid item xs={12}>\r\n                              <Typography className={classes.ruleHeader}>\r\n                                Rule {index+1}\r\n                              </Typography>\r\n                            </Grid>\r\n                          }\r\n                          <Grid item xs={2}>\r\n                            <Select\r\n                              disableUnderline\r\n                              className={classes.field}\r\n                              name=\"type\"\r\n                              value={val.type}\r\n                            >\r\n                              <MenuItem value=\"aff_sub\">aff_sub</MenuItem>\r\n                            </Select>\r\n                          </Grid>\r\n                          <Grid item xs={2}>\r\n                            <Select\r\n                              disableUnderline\r\n                              className={classes.field}\r\n                              name=\"logic\"\r\n                              value={\"is\"}\r\n                            >\r\n                              <MenuItem value={val.logic}>is</MenuItem>\r\n                            </Select>\r\n                          </Grid>\r\n                          <Grid item xs={8}>\r\n                            {\r\n                              val.parameter.map((param, paramIndex) => (\r\n                                <Grid key={param.id} container>\r\n                                  <Grid item xs={10}>\r\n                                    <Input\r\n                                        key={param.id}\r\n                                        className={classes.field}\r\n                                        value={param.value}\r\n                                        onChange={(e)=>changeField(val.id, param.id, e)}\r\n                                        inputProps={{\r\n                                          style:{fontStyle:\"italic\"}\r\n                                        }}\r\n                                        placeholder=\"insert parameter\"\r\n                                        endAdornment={\r\n                                          <InputAdornment position=\"end\">\r\n                                            <Typography className={classes.small}>\r\n                                              {\r\n                                                paramIndex !== val.parameter.length - 1 ?\r\n                                                  <Link  className={`${classes.link} ${classes.removeLink}`} onClick={() => {removeParameter(val.id, param.id)}}>\r\n                                                    remove rule\r\n                                                  </Link>\r\n                                                :\r\n                                                  <Link className={`${classes.link} ${classes.addLink}`} onClick={() => {addParameter(val.id)}}>\r\n                                                    add rule\r\n                                                  </Link>\r\n                                              }\r\n                                              \r\n                                            </Typography>\r\n                                          </InputAdornment> \r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        disableUnderline\r\n                                    />\r\n                                  </Grid>\r\n                                  {\r\n                                    paramIndex === val.parameter.length - 1 &&\r\n                                    <>\r\n                                    <Grid item xs={1}>\r\n                                      <Typography className={classes.iconWrap}>\r\n                                        <RemoveCircleOutline className={`${classes.icon} ${classes.secondaryIcon}`} onClick={()=> {removeRule(val.id)}}/>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={1} >\r\n                                      <Typography className={classes.iconWrap}>\r\n                                        {index === rule.length - 1 &&\r\n                                          <AddCircleOutline className={`${classes.icon} ${classes.primaryIcon}`} onClick={()=> {addRule()}}/>\r\n                                        }\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    </>\r\n                                  }\r\n                                  \r\n                                </Grid>\r\n                                )\r\n                              )\r\n                            }\r\n                          </Grid>\r\n                          \r\n                        </Grid>\r\n                      )\r\n                    )\r\n                  }\r\n                </Grid>\r\n                \r\n                {/* Revenue Amount */}\r\n                <Grid item xs={12}  className={classes.rowMargin}>\r\n                  <Typography className={classes.small}>\r\n                  then revenue is &nbsp;\r\n                  </Typography>\r\n                  <Input\r\n                      className={`${classes.field} ${classes.inline}`}\r\n                      placeholder=\"revenue amount\"\r\n                      type=\"number\"\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          %\r\n                        </InputAdornment>\r\n                      }\r\n                      variant=\"outlined\"\r\n                      disableUnderline\r\n                    />\r\n                </Grid>\r\n              </Grid>  \r\n\r\n              {/* Footer */}\r\n              <Grid item xs={12}  className={classes.footerMargin}>\r\n                <Button className={`${classes.button} ${classes.primary}`}>\r\n                  Confirm\r\n                </Button>\r\n                <Button className={`${classes.button} ${classes.secondary}`}>\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n          </Grid>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}